
package com.servicios;

import java.util.List;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.FaultAction;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 4.0.0-M4
 * Generated source version: 3.0
 * 
 */
@WebService(name = "ServicioWeb", targetNamespace = "http://servicios.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ServicioWeb {


    /**
     * 
     * @return
     *     returns java.util.List<com.servicios.DataLista>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "traerListasPorDefecto", targetNamespace = "http://servicios.com/", className = "com.servicios.TraerListasPorDefecto")
    @ResponseWrapper(localName = "traerListasPorDefectoResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.TraerListasPorDefectoResponse")
    @Action(input = "http://servicios.com/ServicioWeb/traerListasPorDefectoRequest", output = "http://servicios.com/ServicioWeb/traerListasPorDefectoResponse")
    public List<DataLista> traerListasPorDefecto();

    /**
     * 
     * @param nick
     * @param tipo
     * @param apellido
     * @param correo
     * @param imagenP
     * @param nombre
     * @return
     *     returns com.servicios.DataUsuario
     */
    @WebMethod(operationName = "DataUsuarioClienteCompleto")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "DataUsuarioClienteCompleto", targetNamespace = "http://servicios.com/", className = "com.servicios.DataUsuarioClienteCompleto")
    @ResponseWrapper(localName = "DataUsuarioClienteCompletoResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.DataUsuarioClienteCompletoResponse")
    @Action(input = "http://servicios.com/ServicioWeb/DataUsuarioClienteCompletoRequest", output = "http://servicios.com/ServicioWeb/DataUsuarioClienteCompletoResponse")
    public DataUsuario dataUsuarioClienteCompleto(
        @WebParam(name = "nick", targetNamespace = "")
        String nick,
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "apellido", targetNamespace = "")
        String apellido,
        @WebParam(name = "correo", targetNamespace = "")
        String correo,
        @WebParam(name = "imagenP", targetNamespace = "")
        String imagenP,
        @WebParam(name = "tipo", targetNamespace = "")
        String tipo);

    /**
     * 
     * @param sitioWeb
     * @param apellido
     * @param nickname
     * @param biografia
     * @param imagen
     * @param nombre
     * @param email
     */
    @WebMethod(operationName = "AltaArtistaEliminado")
    @RequestWrapper(localName = "AltaArtistaEliminado", targetNamespace = "http://servicios.com/", className = "com.servicios.AltaArtistaEliminado")
    @ResponseWrapper(localName = "AltaArtistaEliminadoResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.AltaArtistaEliminadoResponse")
    @Action(input = "http://servicios.com/ServicioWeb/AltaArtistaEliminadoRequest", output = "http://servicios.com/ServicioWeb/AltaArtistaEliminadoResponse")
    public void altaArtistaEliminado(
        @WebParam(name = "nickname", targetNamespace = "")
        String nickname,
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "apellido", targetNamespace = "")
        String apellido,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "imagen", targetNamespace = "")
        String imagen,
        @WebParam(name = "biografia", targetNamespace = "")
        String biografia,
        @WebParam(name = "sitioWeb", targetNamespace = "")
        String sitioWeb);

    /**
     * 
     * @param temaE
     */
    @WebMethod
    @RequestWrapper(localName = "actualizarTemaEliminadoSistema", targetNamespace = "http://servicios.com/", className = "com.servicios.ActualizarTemaEliminadoSistema")
    @ResponseWrapper(localName = "actualizarTemaEliminadoSistemaResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.ActualizarTemaEliminadoSistemaResponse")
    @Action(input = "http://servicios.com/ServicioWeb/actualizarTemaEliminadoSistemaRequest", output = "http://servicios.com/ServicioWeb/actualizarTemaEliminadoSistemaResponse")
    public void actualizarTemaEliminadoSistema(
        @WebParam(name = "TemaE", targetNamespace = "")
        TemaEliminado temaE);

    /**
     * 
     * @param fechaNac
     * @param password
     * @param tipo
     * @param sitioWeb
     * @param apellido
     * @param nickname
     * @param biografia
     * @param imagen
     * @param nombre
     * @param email
     * @throws UsuarioRepetidoException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "altaPerfil", targetNamespace = "http://servicios.com/", className = "com.servicios.AltaPerfil")
    @ResponseWrapper(localName = "altaPerfilResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.AltaPerfilResponse")
    @Action(input = "http://servicios.com/ServicioWeb/altaPerfilRequest", output = "http://servicios.com/ServicioWeb/altaPerfilResponse", fault = {
        @FaultAction(className = UsuarioRepetidoException_Exception.class, value = "http://servicios.com/ServicioWeb/altaPerfil/Fault/UsuarioRepetidoException")
    })
    public void altaPerfil(
        @WebParam(name = "nickname", targetNamespace = "")
        String nickname,
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "apellido", targetNamespace = "")
        String apellido,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "fechaNac", targetNamespace = "")
        String fechaNac,
        @WebParam(name = "imagen", targetNamespace = "")
        String imagen,
        @WebParam(name = "biografia", targetNamespace = "")
        String biografia,
        @WebParam(name = "sitioWeb", targetNamespace = "")
        String sitioWeb,
        @WebParam(name = "tipo", targetNamespace = "")
        String tipo)
        throws UsuarioRepetidoException_Exception
    ;

    /**
     * 
     * @param tipo
     * @param s
     * @return
     *     returns java.util.List<com.servicios.DataLista>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDataListasReproduccionAjax", targetNamespace = "http://servicios.com/", className = "com.servicios.GetDataListasReproduccionAjax")
    @ResponseWrapper(localName = "getDataListasReproduccionAjaxResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.GetDataListasReproduccionAjaxResponse")
    @Action(input = "http://servicios.com/ServicioWeb/getDataListasReproduccionAjaxRequest", output = "http://servicios.com/ServicioWeb/getDataListasReproduccionAjaxResponse")
    public List<DataLista> getDataListasReproduccionAjax(
        @WebParam(name = "s", targetNamespace = "")
        String s,
        @WebParam(name = "tipo", targetNamespace = "")
        String tipo);

    /**
     * 
     * @param nickname
     * @return
     *     returns java.util.List<com.servicios.DataLista>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getListasParticulares", targetNamespace = "http://servicios.com/", className = "com.servicios.GetListasParticulares")
    @ResponseWrapper(localName = "getListasParticularesResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.GetListasParticularesResponse")
    @Action(input = "http://servicios.com/ServicioWeb/getListasParticularesRequest", output = "http://servicios.com/ServicioWeb/getListasParticularesResponse")
    public List<DataLista> getListasParticulares(
        @WebParam(name = "nickname", targetNamespace = "")
        String nickname);

    /**
     * 
     * @param dtl
     * @throws ListaRepetidaException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "altaListaPart", targetNamespace = "http://servicios.com/", className = "com.servicios.AltaListaPart")
    @ResponseWrapper(localName = "altaListaPartResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.AltaListaPartResponse")
    @Action(input = "http://servicios.com/ServicioWeb/altaListaPartRequest", output = "http://servicios.com/ServicioWeb/altaListaPartResponse", fault = {
        @FaultAction(className = ListaRepetidaException_Exception.class, value = "http://servicios.com/ServicioWeb/altaListaPart/Fault/ListaRepetidaException")
    })
    public void altaListaPart(
        @WebParam(name = "dtl", targetNamespace = "")
        DataLista dtl)
        throws ListaRepetidaException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "traerNickNamesClientes", targetNamespace = "http://servicios.com/", className = "com.servicios.TraerNickNamesClientes")
    @ResponseWrapper(localName = "traerNickNamesClientesResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.TraerNickNamesClientesResponse")
    @Action(input = "http://servicios.com/ServicioWeb/traerNickNamesClientesRequest", output = "http://servicios.com/ServicioWeb/traerNickNamesClientesResponse")
    public List<String> traerNickNamesClientes();

    /**
     * 
     * @return
     *     returns java.util.List<com.servicios.DataLista>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "traerListasParticularesPublicas", targetNamespace = "http://servicios.com/", className = "com.servicios.TraerListasParticularesPublicas")
    @ResponseWrapper(localName = "traerListasParticularesPublicasResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.TraerListasParticularesPublicasResponse")
    @Action(input = "http://servicios.com/ServicioWeb/traerListasParticularesPublicasRequest", output = "http://servicios.com/ServicioWeb/traerListasParticularesPublicasResponse")
    public List<DataLista> traerListasParticularesPublicas();

    /**
     * 
     * @param nickname
     * @return
     *     returns java.util.List<com.servicios.DataLista>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "traerListasParticularesPorClientes", targetNamespace = "http://servicios.com/", className = "com.servicios.TraerListasParticularesPorClientes")
    @ResponseWrapper(localName = "traerListasParticularesPorClientesResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.TraerListasParticularesPorClientesResponse")
    @Action(input = "http://servicios.com/ServicioWeb/traerListasParticularesPorClientesRequest", output = "http://servicios.com/ServicioWeb/traerListasParticularesPorClientesResponse")
    public List<DataLista> traerListasParticularesPorClientes(
        @WebParam(name = "nickname", targetNamespace = "")
        String nickname);

    /**
     * 
     * @param email
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "existeMail", targetNamespace = "http://servicios.com/", className = "com.servicios.ExisteMail")
    @ResponseWrapper(localName = "existeMailResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.ExisteMailResponse")
    @Action(input = "http://servicios.com/ServicioWeb/existeMailRequest", output = "http://servicios.com/ServicioWeb/existeMailResponse")
    public boolean existeMail(
        @WebParam(name = "email", targetNamespace = "")
        String email);

    /**
     * 
     * @param clienteSeleccionado
     * @return
     *     returns com.servicios.UsuariosSeguidosResponse
     */
    @WebMethod(operationName = "UsuarioSeguidosWeb")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "UsuarioSeguidosWeb", targetNamespace = "http://servicios.com/", className = "com.servicios.UsuarioSeguidosWeb")
    @ResponseWrapper(localName = "UsuarioSeguidosWebResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.UsuarioSeguidosWebResponse")
    @Action(input = "http://servicios.com/ServicioWeb/UsuarioSeguidosWebRequest", output = "http://servicios.com/ServicioWeb/UsuarioSeguidosWebResponse")
    public UsuariosSeguidosResponse usuarioSeguidosWeb(
        @WebParam(name = "cliente_seleccionado", targetNamespace = "")
        String clienteSeleccionado);

    /**
     * 
     * @param nombreCliente
     * @param nombreLista
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "Encontrar_Lista_Particular")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Encontrar_Lista_Particular", targetNamespace = "http://servicios.com/", className = "com.servicios.EncontrarListaParticular")
    @ResponseWrapper(localName = "Encontrar_Lista_ParticularResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.EncontrarListaParticularResponse")
    @Action(input = "http://servicios.com/ServicioWeb/Encontrar_Lista_ParticularRequest", output = "http://servicios.com/ServicioWeb/Encontrar_Lista_ParticularResponse")
    public boolean encontrarListaParticular(
        @WebParam(name = "nombre_cliente", targetNamespace = "")
        String nombreCliente,
        @WebParam(name = "nombre_lista", targetNamespace = "")
        String nombreLista);

    /**
     * 
     * @param nickname
     */
    @WebMethod(operationName = "EliminarUsuarioTest")
    @RequestWrapper(localName = "EliminarUsuarioTest", targetNamespace = "http://servicios.com/", className = "com.servicios.EliminarUsuarioTest")
    @ResponseWrapper(localName = "EliminarUsuarioTestResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.EliminarUsuarioTestResponse")
    @Action(input = "http://servicios.com/ServicioWeb/EliminarUsuarioTestRequest", output = "http://servicios.com/ServicioWeb/EliminarUsuarioTestResponse")
    public void eliminarUsuarioTest(
        @WebParam(name = "nickname", targetNamespace = "")
        String nickname);

    /**
     * 
     * @param nickname
     */
    @WebMethod(operationName = "EliminarArtistaPorNickname")
    @RequestWrapper(localName = "EliminarArtistaPorNickname", targetNamespace = "http://servicios.com/", className = "com.servicios.EliminarArtistaPorNickname")
    @ResponseWrapper(localName = "EliminarArtistaPorNicknameResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.EliminarArtistaPorNicknameResponse")
    @Action(input = "http://servicios.com/ServicioWeb/EliminarArtistaPorNicknameRequest", output = "http://servicios.com/ServicioWeb/EliminarArtistaPorNicknameResponse")
    public void eliminarArtistaPorNickname(
        @WebParam(name = "nickname", targetNamespace = "")
        String nickname);

    /**
     * 
     * @param nick
     * @return
     *     returns com.servicios.Artista
     */
    @WebMethod(operationName = "ObtenerArtista")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ObtenerArtista", targetNamespace = "http://servicios.com/", className = "com.servicios.ObtenerArtista")
    @ResponseWrapper(localName = "ObtenerArtistaResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.ObtenerArtistaResponse")
    @Action(input = "http://servicios.com/ServicioWeb/ObtenerArtistaRequest", output = "http://servicios.com/ServicioWeb/ObtenerArtistaResponse")
    public Artista obtenerArtista(
        @WebParam(name = "nick", targetNamespace = "")
        String nick);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getGeneros", targetNamespace = "http://servicios.com/", className = "com.servicios.GetGeneros")
    @ResponseWrapper(localName = "getGenerosResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.GetGenerosResponse")
    @Action(input = "http://servicios.com/ServicioWeb/getGenerosRequest", output = "http://servicios.com/ServicioWeb/getGenerosResponse")
    public List<String> getGeneros();

    /**
     * 
     * @return
     *     returns java.util.List<com.servicios.DataTema>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllTemas", targetNamespace = "http://servicios.com/", className = "com.servicios.GetAllTemas")
    @ResponseWrapper(localName = "getAllTemasResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.GetAllTemasResponse")
    @Action(input = "http://servicios.com/ServicioWeb/getAllTemasRequest", output = "http://servicios.com/ServicioWeb/getAllTemasResponse")
    public List<DataTema> getAllTemas();

    /**
     * 
     * @param albumE
     */
    @WebMethod
    @RequestWrapper(localName = "actualizarAlbumEliminadoSistema", targetNamespace = "http://servicios.com/", className = "com.servicios.ActualizarAlbumEliminadoSistema")
    @ResponseWrapper(localName = "actualizarAlbumEliminadoSistemaResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.ActualizarAlbumEliminadoSistemaResponse")
    @Action(input = "http://servicios.com/ServicioWeb/actualizarAlbumEliminadoSistemaRequest", output = "http://servicios.com/ServicioWeb/actualizarAlbumEliminadoSistemaResponse")
    public void actualizarAlbumEliminadoSistema(
        @WebParam(name = "AlbumE", targetNamespace = "")
        AlbumEliminado albumE);

    /**
     * 
     * @return
     *     returns java.util.List<com.servicios.DataAlbum>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "traerAlbumes", targetNamespace = "http://servicios.com/", className = "com.servicios.TraerAlbumes")
    @ResponseWrapper(localName = "traerAlbumesResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.TraerAlbumesResponse")
    @Action(input = "http://servicios.com/ServicioWeb/traerAlbumesRequest", output = "http://servicios.com/ServicioWeb/traerAlbumesResponse")
    public List<DataAlbum> traerAlbumes();

    /**
     * 
     * @param posicion
     * @param archivo
     * @param duracion
     * @param direccionWeb
     * @param nombreT
     */
    @WebMethod
    @RequestWrapper(localName = "altaTema", targetNamespace = "http://servicios.com/", className = "com.servicios.AltaTema")
    @ResponseWrapper(localName = "altaTemaResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.AltaTemaResponse")
    @Action(input = "http://servicios.com/ServicioWeb/altaTemaRequest", output = "http://servicios.com/ServicioWeb/altaTemaResponse")
    public void altaTema(
        @WebParam(name = "nombreT", targetNamespace = "")
        String nombreT,
        @WebParam(name = "duracion", targetNamespace = "")
        String duracion,
        @WebParam(name = "posicion", targetNamespace = "")
        Integer posicion,
        @WebParam(name = "direccionWeb", targetNamespace = "")
        String direccionWeb,
        @WebParam(name = "archivo", targetNamespace = "")
        String archivo);

    /**
     * 
     * @param id
     * @return
     *     returns java.util.List<com.servicios.DataTema>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "traerTemasPorIdAlbum", targetNamespace = "http://servicios.com/", className = "com.servicios.TraerTemasPorIdAlbum")
    @ResponseWrapper(localName = "traerTemasPorIdAlbumResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.TraerTemasPorIdAlbumResponse")
    @Action(input = "http://servicios.com/ServicioWeb/traerTemasPorIdAlbumRequest", output = "http://servicios.com/ServicioWeb/traerTemasPorIdAlbumResponse")
    public List<DataTema> traerTemasPorIdAlbum(
        @WebParam(name = "id", targetNamespace = "")
        Long id);

    /**
     * 
     * @param posicion
     * @param archivo
     * @param duracion
     * @param direccionWeb
     * @param nombre
     */
    @WebMethod(operationName = "AltaTemaEliminado")
    @RequestWrapper(localName = "AltaTemaEliminado", targetNamespace = "http://servicios.com/", className = "com.servicios.AltaTemaEliminado")
    @ResponseWrapper(localName = "AltaTemaEliminadoResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.AltaTemaEliminadoResponse")
    @Action(input = "http://servicios.com/ServicioWeb/AltaTemaEliminadoRequest", output = "http://servicios.com/ServicioWeb/AltaTemaEliminadoResponse")
    public void altaTemaEliminado(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "duracion", targetNamespace = "")
        String duracion,
        @WebParam(name = "posicion", targetNamespace = "")
        int posicion,
        @WebParam(name = "direccionWeb", targetNamespace = "")
        String direccionWeb,
        @WebParam(name = "archivo", targetNamespace = "")
        String archivo);

    /**
     * 
     * @param nombre
     * @return
     *     returns com.servicios.TemaEliminado
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTemaEliminado", targetNamespace = "http://servicios.com/", className = "com.servicios.GetTemaEliminado")
    @ResponseWrapper(localName = "getTemaEliminadoResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.GetTemaEliminadoResponse")
    @Action(input = "http://servicios.com/ServicioWeb/getTemaEliminadoRequest", output = "http://servicios.com/ServicioWeb/getTemaEliminadoResponse")
    public TemaEliminado getTemaEliminado(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre);

    /**
     * 
     * @param idTema
     * @param idLista
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "existeTemaLista", targetNamespace = "http://servicios.com/", className = "com.servicios.ExisteTemaLista")
    @ResponseWrapper(localName = "existeTemaListaResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.ExisteTemaListaResponse")
    @Action(input = "http://servicios.com/ServicioWeb/existeTemaListaRequest", output = "http://servicios.com/ServicioWeb/existeTemaListaResponse")
    public boolean existeTemaLista(
        @WebParam(name = "idTema", targetNamespace = "")
        Long idTema,
        @WebParam(name = "idLista", targetNamespace = "")
        int idLista);

    /**
     * 
     * @param idTema
     * @param nombreL
     * @param nombre
     */
    @WebMethod
    @RequestWrapper(localName = "eliminarTemasListaPart", targetNamespace = "http://servicios.com/", className = "com.servicios.EliminarTemasListaPart")
    @ResponseWrapper(localName = "eliminarTemasListaPartResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.EliminarTemasListaPartResponse")
    @Action(input = "http://servicios.com/ServicioWeb/eliminarTemasListaPartRequest", output = "http://servicios.com/ServicioWeb/eliminarTemasListaPartResponse")
    public void eliminarTemasListaPart(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "nombreL", targetNamespace = "")
        String nombreL,
        @WebParam(name = "idTema", targetNamespace = "")
        Long idTema);

    /**
     * 
     * @param idTema
     * @param nombre
     */
    @WebMethod
    @RequestWrapper(localName = "eliminarTemaListaDef", targetNamespace = "http://servicios.com/", className = "com.servicios.EliminarTemaListaDef")
    @ResponseWrapper(localName = "eliminarTemaListaDefResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.EliminarTemaListaDefResponse")
    @Action(input = "http://servicios.com/ServicioWeb/eliminarTemaListaDefRequest", output = "http://servicios.com/ServicioWeb/eliminarTemaListaDefResponse")
    public void eliminarTemaListaDef(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "idTema", targetNamespace = "")
        Long idTema);

    /**
     * 
     * @param nombre
     */
    @WebMethod(operationName = "EliminarTemaPorNombre")
    @RequestWrapper(localName = "EliminarTemaPorNombre", targetNamespace = "http://servicios.com/", className = "com.servicios.EliminarTemaPorNombre")
    @ResponseWrapper(localName = "EliminarTemaPorNombreResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.EliminarTemaPorNombreResponse")
    @Action(input = "http://servicios.com/ServicioWeb/EliminarTemaPorNombreRequest", output = "http://servicios.com/ServicioWeb/EliminarTemaPorNombreResponse")
    public void eliminarTemaPorNombre(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre);

    /**
     * 
     * @param s
     * @return
     *     returns java.util.List<com.servicios.DataTema>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDataTemasAjax", targetNamespace = "http://servicios.com/", className = "com.servicios.GetDataTemasAjax")
    @ResponseWrapper(localName = "getDataTemasAjaxResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.GetDataTemasAjaxResponse")
    @Action(input = "http://servicios.com/ServicioWeb/getDataTemasAjaxRequest", output = "http://servicios.com/ServicioWeb/getDataTemasAjaxResponse")
    public List<DataTema> getDataTemasAjax(
        @WebParam(name = "s", targetNamespace = "")
        String s);

    /**
     * 
     * @param idTema
     * @param idLista
     */
    @WebMethod
    @RequestWrapper(localName = "agregarTemaLista", targetNamespace = "http://servicios.com/", className = "com.servicios.AgregarTemaLista")
    @ResponseWrapper(localName = "agregarTemaListaResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.AgregarTemaListaResponse")
    @Action(input = "http://servicios.com/ServicioWeb/agregarTemaListaRequest", output = "http://servicios.com/ServicioWeb/agregarTemaListaResponse")
    public void agregarTemaLista(
        @WebParam(name = "idLista", targetNamespace = "")
        int idLista,
        @WebParam(name = "idTema", targetNamespace = "")
        Long idTema);

    /**
     * 
     * @param id
     * @return
     *     returns java.util.List<com.servicios.DataTema>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "traerTemasPorIdListaReproduccion", targetNamespace = "http://servicios.com/", className = "com.servicios.TraerTemasPorIdListaReproduccion")
    @ResponseWrapper(localName = "traerTemasPorIdListaReproduccionResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.TraerTemasPorIdListaReproduccionResponse")
    @Action(input = "http://servicios.com/ServicioWeb/traerTemasPorIdListaReproduccionRequest", output = "http://servicios.com/ServicioWeb/traerTemasPorIdListaReproduccionResponse")
    public List<DataTema> traerTemasPorIdListaReproduccion(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @return
     *     returns java.util.List<com.servicios.DataGenero>
     * @throws GeneroNoExisteException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getGeneros2", targetNamespace = "http://servicios.com/", className = "com.servicios.GetGeneros2")
    @ResponseWrapper(localName = "getGeneros2Response", targetNamespace = "http://servicios.com/", className = "com.servicios.GetGeneros2Response")
    @Action(input = "http://servicios.com/ServicioWeb/getGeneros2Request", output = "http://servicios.com/ServicioWeb/getGeneros2Response", fault = {
        @FaultAction(className = GeneroNoExisteException_Exception.class, value = "http://servicios.com/ServicioWeb/getGeneros2/Fault/GeneroNoExisteException")
    })
    public List<DataGenero> getGeneros2()
        throws GeneroNoExisteException_Exception
    ;

    /**
     * 
     * @param nombreGenero
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPadre", targetNamespace = "http://servicios.com/", className = "com.servicios.GetPadre")
    @ResponseWrapper(localName = "getPadreResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.GetPadreResponse")
    @Action(input = "http://servicios.com/ServicioWeb/getPadreRequest", output = "http://servicios.com/ServicioWeb/getPadreResponse")
    public String getPadre(
        @WebParam(name = "nombreGenero", targetNamespace = "")
        String nombreGenero);

    /**
     * 
     * @return
     *     returns java.util.List<com.servicios.DataAlbum>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllAlbums", targetNamespace = "http://servicios.com/", className = "com.servicios.GetAllAlbums")
    @ResponseWrapper(localName = "getAllAlbumsResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.GetAllAlbumsResponse")
    @Action(input = "http://servicios.com/ServicioWeb/getAllAlbumsRequest", output = "http://servicios.com/ServicioWeb/getAllAlbumsResponse")
    public List<DataAlbum> getAllAlbums();

    /**
     * 
     * @param nombreArtista
     * @param nombreA
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "verificaAlbum", targetNamespace = "http://servicios.com/", className = "com.servicios.VerificaAlbum")
    @ResponseWrapper(localName = "verificaAlbumResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.VerificaAlbumResponse")
    @Action(input = "http://servicios.com/ServicioWeb/verificaAlbumRequest", output = "http://servicios.com/ServicioWeb/verificaAlbumResponse")
    public boolean verificaAlbum(
        @WebParam(name = "nombreA", targetNamespace = "")
        String nombreA,
        @WebParam(name = "nombreArtista", targetNamespace = "")
        String nombreArtista);

    /**
     * 
     * @param nombreGenero
     */
    @WebMethod
    @RequestWrapper(localName = "addGeneroAlbum", targetNamespace = "http://servicios.com/", className = "com.servicios.AddGeneroAlbum")
    @ResponseWrapper(localName = "addGeneroAlbumResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.AddGeneroAlbumResponse")
    @Action(input = "http://servicios.com/ServicioWeb/addGeneroAlbumRequest", output = "http://servicios.com/ServicioWeb/addGeneroAlbumResponse")
    public void addGeneroAlbum(
        @WebParam(name = "nombreGenero", targetNamespace = "")
        String nombreGenero);

    /**
     * 
     * @param nombreArtista
     * @param fechaCreacion
     * @param imagen
     * @param nombre
     */
    @WebMethod
    @RequestWrapper(localName = "cargarDatosAlbum", targetNamespace = "http://servicios.com/", className = "com.servicios.CargarDatosAlbum")
    @ResponseWrapper(localName = "cargarDatosAlbumResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.CargarDatosAlbumResponse")
    @Action(input = "http://servicios.com/ServicioWeb/cargarDatosAlbumRequest", output = "http://servicios.com/ServicioWeb/cargarDatosAlbumResponse")
    public void cargarDatosAlbum(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "nombreArtista", targetNamespace = "")
        String nombreArtista,
        @WebParam(name = "fechaCreacion", targetNamespace = "")
        Integer fechaCreacion,
        @WebParam(name = "imagen", targetNamespace = "")
        String imagen);

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "altaAlbum", targetNamespace = "http://servicios.com/", className = "com.servicios.AltaAlbum")
    @ResponseWrapper(localName = "altaAlbumResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.AltaAlbumResponse")
    @Action(input = "http://servicios.com/ServicioWeb/altaAlbumRequest", output = "http://servicios.com/ServicioWeb/altaAlbumResponse")
    public void altaAlbum();

    /**
     * 
     * @param artista
     * @return
     *     returns java.util.List<com.servicios.DataAlbum>
     * @throws AlbumNoExisteException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAlbumsByArtista", targetNamespace = "http://servicios.com/", className = "com.servicios.GetAlbumsByArtista")
    @ResponseWrapper(localName = "getAlbumsByArtistaResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.GetAlbumsByArtistaResponse")
    @Action(input = "http://servicios.com/ServicioWeb/getAlbumsByArtistaRequest", output = "http://servicios.com/ServicioWeb/getAlbumsByArtistaResponse", fault = {
        @FaultAction(className = AlbumNoExisteException_Exception.class, value = "http://servicios.com/ServicioWeb/getAlbumsByArtista/Fault/AlbumNoExisteException")
    })
    public List<DataAlbum> getAlbumsByArtista(
        @WebParam(name = "artista", targetNamespace = "")
        String artista)
        throws AlbumNoExisteException_Exception
    ;

    /**
     * 
     * @param imagenAlbum
     * @param fechaCreacion
     * @param nombre
     */
    @WebMethod(operationName = "AltaAlbumEliminado")
    @RequestWrapper(localName = "AltaAlbumEliminado", targetNamespace = "http://servicios.com/", className = "com.servicios.AltaAlbumEliminado")
    @ResponseWrapper(localName = "AltaAlbumEliminadoResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.AltaAlbumEliminadoResponse")
    @Action(input = "http://servicios.com/ServicioWeb/AltaAlbumEliminadoRequest", output = "http://servicios.com/ServicioWeb/AltaAlbumEliminadoResponse")
    public void altaAlbumEliminado(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "fechaCreacion", targetNamespace = "")
        Integer fechaCreacion,
        @WebParam(name = "imagenAlbum", targetNamespace = "")
        String imagenAlbum);

    /**
     * 
     * @param nombre
     * @return
     *     returns com.servicios.AlbumEliminado
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAlbumEliminado", targetNamespace = "http://servicios.com/", className = "com.servicios.GetAlbumEliminado")
    @ResponseWrapper(localName = "getAlbumEliminadoResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.GetAlbumEliminadoResponse")
    @Action(input = "http://servicios.com/ServicioWeb/getAlbumEliminadoRequest", output = "http://servicios.com/ServicioWeb/getAlbumEliminadoResponse")
    public AlbumEliminado getAlbumEliminado(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre);

    /**
     * 
     * @param nombre
     */
    @WebMethod(operationName = "EliminarAlbumPorNombre")
    @RequestWrapper(localName = "EliminarAlbumPorNombre", targetNamespace = "http://servicios.com/", className = "com.servicios.EliminarAlbumPorNombre")
    @ResponseWrapper(localName = "EliminarAlbumPorNombreResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.EliminarAlbumPorNombreResponse")
    @Action(input = "http://servicios.com/ServicioWeb/EliminarAlbumPorNombreRequest", output = "http://servicios.com/ServicioWeb/EliminarAlbumPorNombreResponse")
    public void eliminarAlbumPorNombre(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre);

    /**
     * 
     * @param listaid
     * @return
     *     returns java.util.List<com.servicios.DataTema>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "traerTemasPorListasPorDefectoId", targetNamespace = "http://servicios.com/", className = "com.servicios.TraerTemasPorListasPorDefectoId")
    @ResponseWrapper(localName = "traerTemasPorListasPorDefectoIdResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.TraerTemasPorListasPorDefectoIdResponse")
    @Action(input = "http://servicios.com/ServicioWeb/traerTemasPorListasPorDefectoIdRequest", output = "http://servicios.com/ServicioWeb/traerTemasPorListasPorDefectoIdResponse")
    public List<DataTema> traerTemasPorListasPorDefectoId(
        @WebParam(name = "listaid", targetNamespace = "")
        int listaid);

    /**
     * 
     * @param nickname
     * @return
     *     returns java.util.List<com.servicios.DataTema>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "traerTemasFavoritosPorIdCliente", targetNamespace = "http://servicios.com/", className = "com.servicios.TraerTemasFavoritosPorIdCliente")
    @ResponseWrapper(localName = "traerTemasFavoritosPorIdClienteResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.TraerTemasFavoritosPorIdClienteResponse")
    @Action(input = "http://servicios.com/ServicioWeb/traerTemasFavoritosPorIdClienteRequest", output = "http://servicios.com/ServicioWeb/traerTemasFavoritosPorIdClienteResponse")
    public List<DataTema> traerTemasFavoritosPorIdCliente(
        @WebParam(name = "nickname", targetNamespace = "")
        String nickname);

    /**
     * 
     * @param idTema
     * @param nickname
     */
    @WebMethod
    @RequestWrapper(localName = "eliminarTemasFavoritosCliente", targetNamespace = "http://servicios.com/", className = "com.servicios.EliminarTemasFavoritosCliente")
    @ResponseWrapper(localName = "eliminarTemasFavoritosClienteResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.EliminarTemasFavoritosClienteResponse")
    @Action(input = "http://servicios.com/ServicioWeb/eliminarTemasFavoritosClienteRequest", output = "http://servicios.com/ServicioWeb/eliminarTemasFavoritosClienteResponse")
    public void eliminarTemasFavoritosCliente(
        @WebParam(name = "nickname", targetNamespace = "")
        String nickname,
        @WebParam(name = "idTema", targetNamespace = "")
        Long idTema);

    /**
     * 
     * @param nickname
     * @return
     *     returns java.util.List<com.servicios.DataAlbum>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "traerAlbumesFavoritosPorIdCliente", targetNamespace = "http://servicios.com/", className = "com.servicios.TraerAlbumesFavoritosPorIdCliente")
    @ResponseWrapper(localName = "traerAlbumesFavoritosPorIdClienteResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.TraerAlbumesFavoritosPorIdClienteResponse")
    @Action(input = "http://servicios.com/ServicioWeb/traerAlbumesFavoritosPorIdClienteRequest", output = "http://servicios.com/ServicioWeb/traerAlbumesFavoritosPorIdClienteResponse")
    public List<DataAlbum> traerAlbumesFavoritosPorIdCliente(
        @WebParam(name = "nickname", targetNamespace = "")
        String nickname);

    /**
     * 
     * @param nickname
     * @param idAlbum
     */
    @WebMethod
    @RequestWrapper(localName = "eliminarAlbumesFavoritosCliente", targetNamespace = "http://servicios.com/", className = "com.servicios.EliminarAlbumesFavoritosCliente")
    @ResponseWrapper(localName = "eliminarAlbumesFavoritosClienteResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.EliminarAlbumesFavoritosClienteResponse")
    @Action(input = "http://servicios.com/ServicioWeb/eliminarAlbumesFavoritosClienteRequest", output = "http://servicios.com/ServicioWeb/eliminarAlbumesFavoritosClienteResponse")
    public void eliminarAlbumesFavoritosCliente(
        @WebParam(name = "nickname", targetNamespace = "")
        String nickname,
        @WebParam(name = "idAlbum", targetNamespace = "")
        Long idAlbum);

    /**
     * 
     * @param nickname
     * @param idLista
     */
    @WebMethod
    @RequestWrapper(localName = "eliminarListaFavoritaCliente", targetNamespace = "http://servicios.com/", className = "com.servicios.EliminarListaFavoritaCliente")
    @ResponseWrapper(localName = "eliminarListaFavoritaClienteResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.EliminarListaFavoritaClienteResponse")
    @Action(input = "http://servicios.com/ServicioWeb/eliminarListaFavoritaClienteRequest", output = "http://servicios.com/ServicioWeb/eliminarListaFavoritaClienteResponse")
    public void eliminarListaFavoritaCliente(
        @WebParam(name = "nickname", targetNamespace = "")
        String nickname,
        @WebParam(name = "idLista", targetNamespace = "")
        int idLista);

    /**
     * 
     * @param nickname
     * @return
     *     returns java.util.List<com.servicios.DataLista>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "traerListasFavoritasPorIdCliente", targetNamespace = "http://servicios.com/", className = "com.servicios.TraerListasFavoritasPorIdCliente")
    @ResponseWrapper(localName = "traerListasFavoritasPorIdClienteResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.TraerListasFavoritasPorIdClienteResponse")
    @Action(input = "http://servicios.com/ServicioWeb/traerListasFavoritasPorIdClienteRequest", output = "http://servicios.com/ServicioWeb/traerListasFavoritasPorIdClienteResponse")
    public List<DataLista> traerListasFavoritasPorIdCliente(
        @WebParam(name = "nickname", targetNamespace = "")
        String nickname);

    /**
     * 
     * @param nicknameArtista
     * @return
     *     returns java.util.List<com.servicios.DataUsuario>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSeguidores", targetNamespace = "http://servicios.com/", className = "com.servicios.GetSeguidores")
    @ResponseWrapper(localName = "getSeguidoresResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.GetSeguidoresResponse")
    @Action(input = "http://servicios.com/ServicioWeb/getSeguidoresRequest", output = "http://servicios.com/ServicioWeb/getSeguidoresResponse")
    public List<DataUsuario> getSeguidores(
        @WebParam(name = "nicknameArtista", targetNamespace = "")
        String nicknameArtista);

    /**
     * 
     * @param cliente
     * @param usuario
     */
    @WebMethod(operationName = "Dejar_De_Seguir_Usuario")
    @RequestWrapper(localName = "Dejar_De_Seguir_Usuario", targetNamespace = "http://servicios.com/", className = "com.servicios.DejarDeSeguirUsuario")
    @ResponseWrapper(localName = "Dejar_De_Seguir_UsuarioResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.DejarDeSeguirUsuarioResponse")
    @Action(input = "http://servicios.com/ServicioWeb/Dejar_De_Seguir_UsuarioRequest", output = "http://servicios.com/ServicioWeb/Dejar_De_Seguir_UsuarioResponse")
    public void dejarDeSeguirUsuario(
        @WebParam(name = "cliente", targetNamespace = "")
        String cliente,
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario);

    /**
     * 
     * @param clienteSeleccionado
     * @param albumSeleccionado
     */
    @WebMethod(operationName = "Seguir_ALBUM")
    @RequestWrapper(localName = "Seguir_ALBUM", targetNamespace = "http://servicios.com/", className = "com.servicios.SeguirALBUM")
    @ResponseWrapper(localName = "Seguir_ALBUMResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.SeguirALBUMResponse")
    @Action(input = "http://servicios.com/ServicioWeb/Seguir_ALBUMRequest", output = "http://servicios.com/ServicioWeb/Seguir_ALBUMResponse")
    public void seguirALBUM(
        @WebParam(name = "cliente_seleccionado", targetNamespace = "")
        String clienteSeleccionado,
        @WebParam(name = "album_seleccionado", targetNamespace = "")
        String albumSeleccionado);

    /**
     * 
     * @param clienteSeleccionado
     * @param listaSeleccionada
     */
    @WebMethod(operationName = "Seguir_LISTA")
    @RequestWrapper(localName = "Seguir_LISTA", targetNamespace = "http://servicios.com/", className = "com.servicios.SeguirLISTA")
    @ResponseWrapper(localName = "Seguir_LISTAResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.SeguirLISTAResponse")
    @Action(input = "http://servicios.com/ServicioWeb/Seguir_LISTARequest", output = "http://servicios.com/ServicioWeb/Seguir_LISTAResponse")
    public void seguirLISTA(
        @WebParam(name = "cliente_seleccionado", targetNamespace = "")
        String clienteSeleccionado,
        @WebParam(name = "lista_seleccionada", targetNamespace = "")
        String listaSeleccionada);

    /**
     * 
     * @param clienteSeleccionado
     * @param temaSeleccionado
     */
    @WebMethod(operationName = "Seguir_TEMA")
    @RequestWrapper(localName = "Seguir_TEMA", targetNamespace = "http://servicios.com/", className = "com.servicios.SeguirTEMA")
    @ResponseWrapper(localName = "Seguir_TEMAResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.SeguirTEMAResponse")
    @Action(input = "http://servicios.com/ServicioWeb/Seguir_TEMARequest", output = "http://servicios.com/ServicioWeb/Seguir_TEMAResponse")
    public void seguirTEMA(
        @WebParam(name = "cliente_seleccionado", targetNamespace = "")
        String clienteSeleccionado,
        @WebParam(name = "tema_seleccionado", targetNamespace = "")
        String temaSeleccionado);

    /**
     * 
     * @param clienteSeleccionado
     * @param nicknameUsuario
     */
    @WebMethod(operationName = "Seguir_Usuario")
    @RequestWrapper(localName = "Seguir_Usuario", targetNamespace = "http://servicios.com/", className = "com.servicios.SeguirUsuario")
    @ResponseWrapper(localName = "Seguir_UsuarioResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.SeguirUsuarioResponse")
    @Action(input = "http://servicios.com/ServicioWeb/Seguir_UsuarioRequest", output = "http://servicios.com/ServicioWeb/Seguir_UsuarioResponse")
    public void seguirUsuario(
        @WebParam(name = "cliente_seleccionado", targetNamespace = "")
        String clienteSeleccionado,
        @WebParam(name = "nickname_usuario", targetNamespace = "")
        String nicknameUsuario);

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "borrarRegistrosAcceso", targetNamespace = "http://servicios.com/", className = "com.servicios.BorrarRegistrosAcceso")
    @ResponseWrapper(localName = "borrarRegistrosAccesoResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.BorrarRegistrosAccesoResponse")
    @Action(input = "http://servicios.com/ServicioWeb/borrarRegistrosAccesoRequest", output = "http://servicios.com/ServicioWeb/borrarRegistrosAccesoResponse")
    public void borrarRegistrosAcceso();

    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "obtenerTotalRegistros", targetNamespace = "http://servicios.com/", className = "com.servicios.ObtenerTotalRegistros")
    @ResponseWrapper(localName = "obtenerTotalRegistrosResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.ObtenerTotalRegistrosResponse")
    @Action(input = "http://servicios.com/ServicioWeb/obtenerTotalRegistrosRequest", output = "http://servicios.com/ServicioWeb/obtenerTotalRegistrosResponse")
    public int obtenerTotalRegistros();

    /**
     * 
     * @return
     *     returns java.util.List<com.servicios.DataRegistro>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "obtenerRegistros", targetNamespace = "http://servicios.com/", className = "com.servicios.ObtenerRegistros")
    @ResponseWrapper(localName = "obtenerRegistrosResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.ObtenerRegistrosResponse")
    @Action(input = "http://servicios.com/ServicioWeb/obtenerRegistrosRequest", output = "http://servicios.com/ServicioWeb/obtenerRegistrosResponse")
    public List<DataRegistro> obtenerRegistros();

    /**
     * 
     * @param os
     * @param ip
     * @param userAgent
     * @param url
     */
    @WebMethod
    @RequestWrapper(localName = "altaRegistro", targetNamespace = "http://servicios.com/", className = "com.servicios.AltaRegistro")
    @ResponseWrapper(localName = "altaRegistroResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.AltaRegistroResponse")
    @Action(input = "http://servicios.com/ServicioWeb/altaRegistroRequest", output = "http://servicios.com/ServicioWeb/altaRegistroResponse")
    public void altaRegistro(
        @WebParam(name = "ip", targetNamespace = "")
        String ip,
        @WebParam(name = "url", targetNamespace = "")
        String url,
        @WebParam(name = "userAgent", targetNamespace = "")
        String userAgent,
        @WebParam(name = "os", targetNamespace = "")
        String os);

    /**
     * 
     * @param nick
     * @param tipo
     */
    @WebMethod
    @RequestWrapper(localName = "altaSubscripcion", targetNamespace = "http://servicios.com/", className = "com.servicios.AltaSubscripcion")
    @ResponseWrapper(localName = "altaSubscripcionResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.AltaSubscripcionResponse")
    @Action(input = "http://servicios.com/ServicioWeb/altaSubscripcionRequest", output = "http://servicios.com/ServicioWeb/altaSubscripcionResponse")
    public void altaSubscripcion(
        @WebParam(name = "nick", targetNamespace = "")
        String nick,
        @WebParam(name = "tipo", targetNamespace = "")
        String tipo);

    /**
     * 
     * @param nick
     * @return
     *     returns com.servicios.DataSub
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "darSubUsuario", targetNamespace = "http://servicios.com/", className = "com.servicios.DarSubUsuario")
    @ResponseWrapper(localName = "darSubUsuarioResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.DarSubUsuarioResponse")
    @Action(input = "http://servicios.com/ServicioWeb/darSubUsuarioRequest", output = "http://servicios.com/ServicioWeb/darSubUsuarioResponse")
    public DataSub darSubUsuario(
        @WebParam(name = "nick", targetNamespace = "")
        String nick);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://servicios.com/", className = "com.servicios.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.HelloResponse")
    @Action(input = "http://servicios.com/ServicioWeb/helloRequest", output = "http://servicios.com/ServicioWeb/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param nick
     * @return
     *     returns com.servicios.Cliente
     */
    @WebMethod(operationName = "ObtenerCliente")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ObtenerCliente", targetNamespace = "http://servicios.com/", className = "com.servicios.ObtenerCliente")
    @ResponseWrapper(localName = "ObtenerClienteResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.ObtenerClienteResponse")
    @Action(input = "http://servicios.com/ServicioWeb/ObtenerClienteRequest", output = "http://servicios.com/ServicioWeb/ObtenerClienteResponse")
    public Cliente obtenerCliente(
        @WebParam(name = "nick", targetNamespace = "")
        String nick);

    /**
     * 
     * @param artista
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "traerAlbumesArtista", targetNamespace = "http://servicios.com/", className = "com.servicios.TraerAlbumesArtista")
    @ResponseWrapper(localName = "traerAlbumesArtistaResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.TraerAlbumesArtistaResponse")
    @Action(input = "http://servicios.com/ServicioWeb/traerAlbumesArtistaRequest", output = "http://servicios.com/ServicioWeb/traerAlbumesArtistaResponse")
    public List<String> traerAlbumesArtista(
        @WebParam(name = "artista", targetNamespace = "")
        String artista);

    /**
     * 
     * @param album
     */
    @WebMethod
    @RequestWrapper(localName = "eliminarGenerosDeAlbum", targetNamespace = "http://servicios.com/", className = "com.servicios.EliminarGenerosDeAlbum")
    @ResponseWrapper(localName = "eliminarGenerosDeAlbumResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.EliminarGenerosDeAlbumResponse")
    @Action(input = "http://servicios.com/ServicioWeb/eliminarGenerosDeAlbumRequest", output = "http://servicios.com/ServicioWeb/eliminarGenerosDeAlbumResponse")
    public void eliminarGenerosDeAlbum(
        @WebParam(name = "album", targetNamespace = "")
        Album album);

    /**
     * 
     * @param email
     * @return
     *     returns com.servicios.Usuario
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "obtenerUsuarioMail", targetNamespace = "http://servicios.com/", className = "com.servicios.ObtenerUsuarioMail")
    @ResponseWrapper(localName = "obtenerUsuarioMailResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.ObtenerUsuarioMailResponse")
    @Action(input = "http://servicios.com/ServicioWeb/obtenerUsuarioMailRequest", output = "http://servicios.com/ServicioWeb/obtenerUsuarioMailResponse")
    public Usuario obtenerUsuarioMail(
        @WebParam(name = "email", targetNamespace = "")
        String email);

    /**
     * 
     * @param nombreA
     * @return
     *     returns com.servicios.Album
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAlbum", targetNamespace = "http://servicios.com/", className = "com.servicios.GetAlbum")
    @ResponseWrapper(localName = "getAlbumResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.GetAlbumResponse")
    @Action(input = "http://servicios.com/ServicioWeb/getAlbumRequest", output = "http://servicios.com/ServicioWeb/getAlbumResponse")
    public Album getAlbum(
        @WebParam(name = "nombreA", targetNamespace = "")
        String nombreA);

    /**
     * 
     * @param nick
     * @param tipo
     * @param sitioWeb
     * @param apellido
     * @param correo
     * @param imagenP
     * @param biografia
     * @param nombre
     * @return
     *     returns com.servicios.DataUsuario
     */
    @WebMethod(operationName = "DataUsuarioArtistaCompleto")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "DataUsuarioArtistaCompleto", targetNamespace = "http://servicios.com/", className = "com.servicios.DataUsuarioArtistaCompleto")
    @ResponseWrapper(localName = "DataUsuarioArtistaCompletoResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.DataUsuarioArtistaCompletoResponse")
    @Action(input = "http://servicios.com/ServicioWeb/DataUsuarioArtistaCompletoRequest", output = "http://servicios.com/ServicioWeb/DataUsuarioArtistaCompletoResponse")
    public DataUsuario dataUsuarioArtistaCompleto(
        @WebParam(name = "nick", targetNamespace = "")
        String nick,
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "apellido", targetNamespace = "")
        String apellido,
        @WebParam(name = "correo", targetNamespace = "")
        String correo,
        @WebParam(name = "imagenP", targetNamespace = "")
        String imagenP,
        @WebParam(name = "biografia", targetNamespace = "")
        String biografia,
        @WebParam(name = "sitioWeb", targetNamespace = "")
        String sitioWeb,
        @WebParam(name = "tipo", targetNamespace = "")
        String tipo);

    /**
     * 
     * @param nick
     * @return
     *     returns com.servicios.Usuario
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "obtenerUsuario", targetNamespace = "http://servicios.com/", className = "com.servicios.ObtenerUsuario")
    @ResponseWrapper(localName = "obtenerUsuarioResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.ObtenerUsuarioResponse")
    @Action(input = "http://servicios.com/ServicioWeb/obtenerUsuarioRequest", output = "http://servicios.com/ServicioWeb/obtenerUsuarioResponse")
    public Usuario obtenerUsuario(
        @WebParam(name = "nick", targetNamespace = "")
        String nick);

    /**
     * 
     * @param genero
     * @return
     *     returns java.util.List<com.servicios.DataAlbum>
     * @throws AlbumNoExisteException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAlbumsByGenero", targetNamespace = "http://servicios.com/", className = "com.servicios.GetAlbumsByGenero")
    @ResponseWrapper(localName = "getAlbumsByGeneroResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.GetAlbumsByGeneroResponse")
    @Action(input = "http://servicios.com/ServicioWeb/getAlbumsByGeneroRequest", output = "http://servicios.com/ServicioWeb/getAlbumsByGeneroResponse", fault = {
        @FaultAction(className = AlbumNoExisteException_Exception.class, value = "http://servicios.com/ServicioWeb/getAlbumsByGenero/Fault/AlbumNoExisteException")
    })
    public List<DataAlbum> getAlbumsByGenero(
        @WebParam(name = "genero", targetNamespace = "")
        String genero)
        throws AlbumNoExisteException_Exception
    ;

    /**
     * 
     * @param genero
     * @return
     *     returns java.util.List<com.servicios.DataAlbum>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDataAlbumsAjax", targetNamespace = "http://servicios.com/", className = "com.servicios.GetDataAlbumsAjax")
    @ResponseWrapper(localName = "getDataAlbumsAjaxResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.GetDataAlbumsAjaxResponse")
    @Action(input = "http://servicios.com/ServicioWeb/getDataAlbumsAjaxRequest", output = "http://servicios.com/ServicioWeb/getDataAlbumsAjaxResponse")
    public List<DataAlbum> getDataAlbumsAjax(
        @WebParam(name = "genero", targetNamespace = "")
        String genero);

    /**
     * 
     * @param nickname
     * @return
     *     returns com.servicios.ArtistaEliminado
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getArtistaEliminado", targetNamespace = "http://servicios.com/", className = "com.servicios.GetArtistaEliminado")
    @ResponseWrapper(localName = "getArtistaEliminadoResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.GetArtistaEliminadoResponse")
    @Action(input = "http://servicios.com/ServicioWeb/getArtistaEliminadoRequest", output = "http://servicios.com/ServicioWeb/getArtistaEliminadoResponse")
    public ArtistaEliminado getArtistaEliminado(
        @WebParam(name = "nickname", targetNamespace = "")
        String nickname);

    /**
     * 
     * @return
     *     returns java.util.List<com.servicios.DataUsuario>
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getClientes", targetNamespace = "http://servicios.com/", className = "com.servicios.GetClientes")
    @ResponseWrapper(localName = "getClientesResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.GetClientesResponse")
    @Action(input = "http://servicios.com/ServicioWeb/getClientesRequest", output = "http://servicios.com/ServicioWeb/getClientesResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://servicios.com/ServicioWeb/getClientes/Fault/UsuarioNoExisteException")
    })
    public List<DataUsuario> getClientes()
        throws UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param nickname
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "existeUsuario", targetNamespace = "http://servicios.com/", className = "com.servicios.ExisteUsuario")
    @ResponseWrapper(localName = "existeUsuarioResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.ExisteUsuarioResponse")
    @Action(input = "http://servicios.com/ServicioWeb/existeUsuarioRequest", output = "http://servicios.com/ServicioWeb/existeUsuarioResponse")
    public boolean existeUsuario(
        @WebParam(name = "nickname", targetNamespace = "")
        String nickname);

    /**
     * 
     * @param tipo
     * @param s
     * @return
     *     returns java.util.List<com.servicios.DataUsuario>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDataUsuariosAjax", targetNamespace = "http://servicios.com/", className = "com.servicios.GetDataUsuariosAjax")
    @ResponseWrapper(localName = "getDataUsuariosAjaxResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.GetDataUsuariosAjaxResponse")
    @Action(input = "http://servicios.com/ServicioWeb/getDataUsuariosAjaxRequest", output = "http://servicios.com/ServicioWeb/getDataUsuariosAjaxResponse")
    public List<DataUsuario> getDataUsuariosAjax(
        @WebParam(name = "s", targetNamespace = "")
        String s,
        @WebParam(name = "tipo", targetNamespace = "")
        String tipo);

    /**
     * 
     * @param cliente
     * @param nombre
     * @param rutaimg
     * @return
     *     returns com.servicios.DataLista
     */
    @WebMethod(operationName = "DataListaRIC")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "DataListaRIC", targetNamespace = "http://servicios.com/", className = "com.servicios.DataListaRIC")
    @ResponseWrapper(localName = "DataListaRICResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.DataListaRICResponse")
    @Action(input = "http://servicios.com/ServicioWeb/DataListaRICRequest", output = "http://servicios.com/ServicioWeb/DataListaRICResponse")
    public DataLista dataListaRIC(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "rutaimg", targetNamespace = "")
        String rutaimg,
        @WebParam(name = "cliente", targetNamespace = "")
        String cliente);

    /**
     * 
     * @param artistaE
     */
    @WebMethod
    @RequestWrapper(localName = "actualizarArtistaEliminado", targetNamespace = "http://servicios.com/", className = "com.servicios.ActualizarArtistaEliminado")
    @ResponseWrapper(localName = "actualizarArtistaEliminadoResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.ActualizarArtistaEliminadoResponse")
    @Action(input = "http://servicios.com/ServicioWeb/actualizarArtistaEliminadoRequest", output = "http://servicios.com/ServicioWeb/actualizarArtistaEliminadoResponse")
    public void actualizarArtistaEliminado(
        @WebParam(name = "ArtistaE", targetNamespace = "")
        ArtistaEliminado artistaE);

    /**
     * 
     * @param idLista
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "esPublicaLista", targetNamespace = "http://servicios.com/", className = "com.servicios.EsPublicaLista")
    @ResponseWrapper(localName = "esPublicaListaResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.EsPublicaListaResponse")
    @Action(input = "http://servicios.com/ServicioWeb/esPublicaListaRequest", output = "http://servicios.com/ServicioWeb/esPublicaListaResponse")
    public boolean esPublicaLista(
        @WebParam(name = "idLista", targetNamespace = "")
        int idLista);

    /**
     * 
     * @param listaId
     */
    @WebMethod
    @RequestWrapper(localName = "modificarListaParticularPorId", targetNamespace = "http://servicios.com/", className = "com.servicios.ModificarListaParticularPorId")
    @ResponseWrapper(localName = "modificarListaParticularPorIdResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.ModificarListaParticularPorIdResponse")
    @Action(input = "http://servicios.com/ServicioWeb/modificarListaParticularPorIdRequest", output = "http://servicios.com/ServicioWeb/modificarListaParticularPorIdResponse")
    public void modificarListaParticularPorId(
        @WebParam(name = "listaId", targetNamespace = "")
        int listaId);

    /**
     * 
     * @return
     *     returns java.util.List<com.servicios.DataUsuario>
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getArtistas", targetNamespace = "http://servicios.com/", className = "com.servicios.GetArtistas")
    @ResponseWrapper(localName = "getArtistasResponse", targetNamespace = "http://servicios.com/", className = "com.servicios.GetArtistasResponse")
    @Action(input = "http://servicios.com/ServicioWeb/getArtistasRequest", output = "http://servicios.com/ServicioWeb/getArtistasResponse", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://servicios.com/ServicioWeb/getArtistas/Fault/UsuarioNoExisteException")
    })
    public List<DataUsuario> getArtistas()
        throws UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<com.servicios.DataUsuario>
     * @throws UsuarioNoExisteException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getClientes2", targetNamespace = "http://servicios.com/", className = "com.servicios.GetClientes2")
    @ResponseWrapper(localName = "getClientes2Response", targetNamespace = "http://servicios.com/", className = "com.servicios.GetClientes2Response")
    @Action(input = "http://servicios.com/ServicioWeb/getClientes2Request", output = "http://servicios.com/ServicioWeb/getClientes2Response", fault = {
        @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://servicios.com/ServicioWeb/getClientes2/Fault/UsuarioNoExisteException")
    })
    public List<DataUsuario> getClientes2()
        throws UsuarioNoExisteException_Exception
    ;

    /**
     * 
     * @param artista
     * @return
     *     returns java.util.List<com.servicios.DataAlbum>
     * @throws AlbumNoExisteException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAlbumsByArtista2", targetNamespace = "http://servicios.com/", className = "com.servicios.GetAlbumsByArtista2")
    @ResponseWrapper(localName = "getAlbumsByArtista2Response", targetNamespace = "http://servicios.com/", className = "com.servicios.GetAlbumsByArtista2Response")
    @Action(input = "http://servicios.com/ServicioWeb/getAlbumsByArtista2Request", output = "http://servicios.com/ServicioWeb/getAlbumsByArtista2Response", fault = {
        @FaultAction(className = AlbumNoExisteException_Exception.class, value = "http://servicios.com/ServicioWeb/getAlbumsByArtista2/Fault/AlbumNoExisteException")
    })
    public List<DataAlbum> getAlbumsByArtista2(
        @WebParam(name = "artista", targetNamespace = "")
        String artista)
        throws AlbumNoExisteException_Exception
    ;

}
